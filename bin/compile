#!/usr/bin/env ruby

puts "in old_compile.rb"
puts ARGV[0]
puts ARGV[1]
puts ARGV[2]
puts "end of arguments"
# sync output
$stdout.sync = true

puts "trying to build cmake"

`build="#{ARGV[0]}"`
`cache="#{ARGV[1]}"`
`env="#{ARGV[2]}}"`

`cmake_version="2.8.6"`
`cmake_url="http://www.cmake.org/files/v2.8/cmake-2.8.6.tar.gz"`
`cmake_file="cmake-${cmake_version}.tar.gz"`
`cmake_tar_dir="cmake-${cmake_version}"`

`cache_target=${cache}/${io_file}`
`build_target=${build}/.local`
`target="/app/.local"`

`echo "Compiling cmake v${cmake_version}..."`
#Compile cmake
`curl -s ${cmake_url} > ${cmake_file}`
`tar zxf ${cmake_file}`
`cd ${cmake_tar_dir}`
`./bootstrap --prefix=${target}`
`make`
`make install`
`PATH=${target}/bin:$PATH`
`cd ..`

puts "finished making cmake"

$:.unshift File.expand_path("../../lib", __FILE__)
require "language_pack"
require "language_pack/shell_helpers"

LanguagePack::Instrument.trace 'compile', 'app.compile' do
  if pack = LanguagePack.detect(ARGV[0], ARGV[1])
    LanguagePack::ShellHelpers.initialize_env(ARGV[2])
    pack.topic("Compiling #{pack.name}")
    pack.log("compile") do
      pack.compile
    end
  end
end
